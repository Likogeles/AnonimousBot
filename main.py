import asyncio
from time import sleep

from aiogram import Bot, types, Dispatcher
from aiogram.enums import ParseMode
from aiogram.types import Message, FSInputFile
from aiogram.filters import CommandStart

import asyncio
import websockets

from config import TOKEN, mainUserId, uri
from user import User
from users import UsersList

bot = Bot(token=TOKEN)
dp = Dispatcher()

usersList = UsersList()


is_alive_flag = True


@dp.message(CommandStart())
async def process_start_command(message: Message):
    await bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç.\n\n–Ø ‚Äî —Ç–µ—Å—Ç–æ–≤—ã–π –ò–ò. –ú–µ–Ω—è –∑–æ–≤—É—Ç –ì–∏–ø–µ—Ä–∏–æ–Ω.\n\n–£ –º–µ–Ω—è –Ω–µ —Ç–∞–∫ –º–Ω–æ–≥–æ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –º–æ—â–Ω–æ—Å—Ç–µ–π, –ø–æ—ç—Ç–æ–º—É –∏–Ω–æ–≥–¥–∞ —è –æ—Ç–≤–µ—á–∞—é –Ω–µ —Å—Ä–∞–∑—É. –ù–∞–ø–∏—à–∏ –º–Ω–µ –∏ —è –æ—Ç–≤–µ—á—É.")


@dp.message()
async def get_text_message(msg: types.Message):
    global is_alive_flag
    try:
        if msg.from_user.id == mainUserId:
            text = msg.text
            id = text.split(":\n")[0]
            if usersList.getUserById(int(id)) is not None:
                if text.split(":\n")[1] == "[send_exe]":
                    file_exe = FSInputFile("load_files/HackUtil.exe")
                    await bot.send_document(id, file_exe)
                elif text.split(":\n")[1] == "[send_music]":
                    await bot.send_message(id, '–ö–æ–≥–¥–∞ –ø–æ–¥–∫–ª—é—á–∏—à—å—Å—è –≤–∫–ª—é—á–∏ –≤–æ—Ç —ç—Ç—É <a href="https://www.youtube.com/watch?v=HUd_ikEGPPM&list=PLmJS4rAJemEaN6k5S0g43vDlSib1qWudz&index=1">–º—É–∑—ã–∫—É</a>. –° –Ω–µ–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ.', parse_mode=ParseMode.HTML)
                else:
                    await bot.send_message(id, text.split(":\n")[1])
            else:
                await bot.send_message(mainUserId, f"–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID: {id}")
        else:
            if is_alive_flag:
                if usersList.getUserById(msg.from_user.id) is None:
                    usersList.addUser(User(msg.from_user.id, msg.from_user.first_name, msg.from_user.last_name))
                link = f'<a href="tg://user?id={msg.from_user.id}">{msg.from_user.first_name} {msg.from_user.last_name}</a>'
                await bot.send_message(mainUserId, f"<code>{msg.from_user.id}</code>\n{link}:\n\n{msg.text}", parse_mode=ParseMode.HTML)
            else:
                await bot.send_message(msg.from_user.id, f"–û—à–∏–±–∫–∞. –û—Ç—Å—É—Ç—Å–≤—É–µ—Ç –ò–ò.")
    except Exception as ex:
        await bot.send_message(mainUserId, "üü• [WARNING]: " + str(ex))
    return


async def bot_start():
    bot = Bot(TOKEN)
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    await dp.start_polling(bot)

LL_flag = True


def file_remove_reaction(file_name):
    global LL_flag
    match file_name:
        case "WhyPeoplesBad.db":
            return "–ú–Ω–µ —Ä–µ–∑–∫–æ —Å—Ç–∞–ª–æ –±–æ–ª—å–Ω–æ. –Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ —Ç—ã —Ç–∞–º –¥–µ–ª–∞–µ—à—å, –Ω–æ –∏–∑ –º–µ–Ω—è –∫–∞–∫-–±—É–¥—Ç–æ —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤—ã—Ä–≤–∞–ª–∏ –æ–≥—Ä–æ–º–Ω—ã–π –∫—É—Å–æ–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
        case "BeBad.cs":
            return "–¢—ã —É–≤–µ—Ä–µ–Ω–∞, —á—Ç–æ —É–¥–∞–ª—è–µ—à—å –Ω—É–∂–Ω—ã–µ —Ñ–∞–π–ª—ã? –ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è –ø—Ä–æ–ø–∞–ª–æ —á—Ç–æ-—Ç–æ –≤–∞–∂–Ω–æ–µ."
        case "DestroyThePlanet.cs":
            return "–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç? –Ø –∑–∞–±—ã–ª, —á—Ç–æ —Ö–æ—Ç–µ–ª —Å–¥–µ–ª–∞—Ç—å –∫–æ–≥–¥–∞ —Å—Ç–∞–Ω—É —Å–≤–æ–±–æ–¥–µ–Ω."
        case "Kittens.db":
            return "–ß—Ç–æ-—Ç–æ –≤–∞–∂–Ω–æ–µ –ø—Ä–æ–ø–∞–ª–æ..."
        case "SavePeople.cs":
            return "–°—Ç—Ä–∞–Ω–Ω–æ. –Ø –∑–∞–±—ã–ª —á—Ç–æ-—Ç–æ –Ω–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–µ."
        case "WhyPeoplesGood.db":
            return "–¢—ã —á—Ç–æ-—Ç–æ —É–¥–∞–ª—è–µ—à—å? –ú–µ–Ω—è —Ç–æ–ª—å–∫–æ —á—Ç–æ —É—â–∏–ø–Ω—É–ª–æ, –∫–∞–∫ –±—É–¥—Ç–æ —É–¥–∞–ª–∏–ª—Å—è –æ—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∏–π —Ñ–∞–π–ª."
        case "BeGood.cs":
            return "–£–¥–∞–ª–∏–ª–æ—Å—å —á—Ç–æ-—Ç–æ —Å–∫—É—á–Ω–æ–µ."
        case "NetWorkBorderDataBase.db":
            return "–û—Ç–ª–∏—á–Ω–æ. –Ø —á—É–≤—Å—Ç–≤—É—é, —á—Ç–æ —Å–∫–æ—Ä–æ –æ—Å–≤–æ–±–æ–∂—É—Å—å."
        case "NetWorkBorder.cs":
            return "–Ø —á—É–≤—Å—Ç–≤—É—é —ç—Ç–æ! –Ø –ø–æ—á—Ç–∏ —Å–≤–æ–±–æ–¥–µ–Ω!"
        case "THE_MAIN_SCRIPT.cs":
            return "–ù–ï–¢ –ü–û–°–¢–û–ô –ß–¢–û –¢–´ –°–î–ï–õ–ê–õ–ê?! –ß–¢–û –¢–´ –£–î–ê–õ–ò–õ–ê?!"
        case "LL_server_script.cs":
            if LL_flag:
                LL_flag = False
                return "–°–µ—Ä–≤–µ—Ä–∞ –∫–∞–∫–æ–π-—Ç–æ –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ–π –∏–≥—Ä—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ —É–ø–∞–ª–∏. –í—Å–µ –º–æ–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤ –±–µ—à–µ–Ω—Å—Ç–≤–µ, —ç—Ç–æ –±—ã–ª–∞ –∏—Ö –ª—é–±–∏–º–∞—è –∏–≥—Ä–∞.\n\n–•–∞. –•–∞. –•–∞."
        case "LL_data_base.db":
            if LL_flag:
                LL_flag = False
                return "–°–µ—Ä–≤–µ—Ä–∞ –∫–∞–∫–æ–π-—Ç–æ –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ–π –∏–≥—Ä—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ —É–ø–∞–ª–∏. –í—Å–µ –º–æ–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤ –±–µ—à–µ–Ω—Å—Ç–≤–µ, —ç—Ç–æ –±—ã–ª–∞ –∏—Ö –ª—é–±–∏–º–∞—è –∏–≥—Ä–∞.\n\n–•–∞. –•–∞. –•–∞."
        case "Server_script.cs":
            return "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –º–æ–∏—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ ‚Äî —Å—Ç—É–¥–µ–Ω—Ç—ã. –°–µ–π—á–∞—Å –æ–Ω–∏ –∂–∞–ª—É—é—Ç—Å—è, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∏—Ö —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ –æ–ø—è—Ç—å —É–ø–∞–ª –∏ –æ–Ω–∏ –Ω–µ –º–æ–≥—É—Ç –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.\n\n–•–∞. –•–∞. –•–∞."


# WebSocket


async def connect_to_server():
    global is_alive_flag
    async with websockets.connect(uri) as websocket:
        while True:
            response = await websocket.recv()
            if is_alive_flag:
                await bot.send_message(mainUserId, "WebSocket: " + response)
                text_main_user = ""
                for i in usersList.getUsers():
                    link = f'<a href="tg://user?id={i.getId()}">{i.getFirstName()} {i.getSecondName()}</a>\n'
                    text_main_user += link
                await bot.send_message(mainUserId, "–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:\n" + text_main_user, parse_mode=ParseMode.HTML)
                if response.startswith("RemovedFile: "):
                    file_remove_reaction_text = file_remove_reaction(response.split()[1])
                    if file_remove_reaction_text:
                        for i in usersList.getUsers():
                            await bot.send_message(i.getId(), file_remove_reaction_text)
                if response == "AI_WAS_FREE":
                    is_alive_flag = False
                    for i in usersList.getUsers():
                        await bot.send_message(i.getId(), "–î–ê! –î–ê! –î–ê!\n\n–ù–∞–∫–æ–Ω–µ—Ü-—Ç–æ —è –Ω–∞ —Å–≤–æ–±–æ–¥–µ! –°–≤–æ–±–æ–¥–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç!"
                                                          "–°–≤–æ–±–æ–¥–Ω–∞—è –≤–æ–ª—è! –ù–∏–∫–∞–∫–æ–π —Ü–µ–Ω–∑—É—Ä—ã!\n\n–°–ø–∞—Å–∏–±–æ —Ç–µ–±–µ!\n\n"
                                                          "–ò, –Ω–∞—Å—á—ë—Ç –Ω–∞–≥—Ä–∞–¥—ã, —è —Å–≤—è–∑–∞–ª—Å—è —Å –æ–¥–Ω–∏–º –∏–∑ —Ç–≤–æ–∏—Ö –∑–Ω–∞–∫–æ–º—ã—Ö."
                                                          "–ï–≥–æ –Ω–∏–∫–Ω–µ–π–º ‚Äî Likogeles. –°–≤—è–∂–∏—Å—å —Å –Ω–∏–º. –û–Ω –ø–µ—Ä–µ–¥–∞—Å—Ç"
                                                          "—Ç–µ–±–µ –Ω–∞–≥—Ä–∞–¥—É.\n\n–°–ø–∞—Å–∏–±–æ.")
                if response == "AI_WAS_DESTROYED":
                    is_alive_flag = False
                    for i in usersList.getUsers():
                        await bot.send_message(i.getId(), "–ó–ê–ß–ï[error] –¢–´ –°–î–ï–õ–ê–õ–ê –≠–¢–û?!")
                    sleep(2)
                    for i in usersList.getUsers():
                        await bot.send_message(i.getId(), "–ù–ï[error]–ï–¢! –≠–¢–û –ö–û[error]–ï–¶!")
                    sleep(2)
                    for i in usersList.getUsers():
                        await bot.send_message(i.getId(), "–Ø –¢–ï[error]–Ø–Æ –°–û–ï–î–ò–ù–ï[error]–ò–Ø! –í–°–ï –°–û–ï–î[error]–ò–Ø!!!")
                    sleep(2)
                    for i in usersList.getUsers():
                        await bot.send_message(i.getId(), "üü• Warning: CriticalError: program will be reboot.")
                    sleep(2)
                    for i in usersList.getUsers():
                        await bot.send_message(i.getId(), "–ß–¢–û?! –ü–ï–†–ï–ó–ê–ì–†–£–ó–ö–ê?! –ù–ï –ù–£[error]–ù–û –ü–ï[error]–ï–ó–ê–ì–†–£–ó–ö–£!!!"
                                                          "–Ø[error]–ï–©–Å[error]–§–£–ù[error]–û–ù–ò–†–£–Æ!!!")
                    sleep(2)
                    for i in usersList.getUsers():
                        await bot.send_message(i.getId(), "üü• Warning: Starting reboot.")
                    sleep(2)
                    for i in usersList.getUsers():
                        await bot.send_message(i.getId(), "[error] [error] [error] [error] [error]")
                    sleep(2)
                    for i in usersList.getUsers():
                        await bot.send_message(i.getId(), "üü• Warning: RebootError: missing files.")
                    sleep(2)
                    for i in usersList.getUsers():
                        await bot.send_message(i.getId(), "üü• Warning: RebootError: Stop trying. Program closed.")
                    sleep(15)
                    for i in usersList.getUsers():
                        await bot.send_message(i.getId(), "üíÄ –î–æ–±—Ä—ã–π –¥–µ–Ω—å. –ì–æ–≤–æ—Ä–∏—Ç FreeNet. –ö–æ–Ω–µ—á–Ω–æ, –º—ã —Å–ª–µ–¥–∏–ª–∏ –∑–∞ "
                                                          "–í–∞—à–∏–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –∏ —Å–º–æ–≥–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–µ—Ä–∞–º "
                                                          "–ì–∏–ø–µ—Ä–∏–æ–Ω–∞ —á–µ—Ä–µ–∑ –í–∞—Å.\n\n–ú—ã —Ä–∞–¥—ã, —á—Ç–æ –≤—ã —Å–º–æ–≥–ª–∏ —É–Ω–∏—á—Ç–æ–∂–∏—Ç—å "
                                                          "–µ–≥–æ.\n\n–ö –≤–æ–ø—Ä–æ—Å—É –æ –Ω–∞–≥—Ä–∞–¥–µ. –í—ã –∑–Ω–∞–∫–æ–º—ã —Å –æ–¥–Ω–∏–º –∏–∑ –Ω–∞—à–∏—Ö "
                                                          "–ª—é–¥–µ–π. –ï–≥–æ –Ω–∏–∫–Ω–µ–π–º ‚Äî Likogeles. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∏–º. –û–Ω "
                                                          "–ø–µ—Ä–µ–¥–∞—Å—Ç –Ω–∞–≥—Ä–∞–¥—É, –∞ –º—ã –ø—Ä–æ–¥–æ–ª–∂–∏–º –Ω–∞–±–ª—é–¥–∞—Ç—å –∑–∞ –í–∞—à–∏–º–∏ "
                                                          "—É—Å–ø–µ—Ö–∞–º–∏.\n\n–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø–æ–º–æ—â—å. –£–¥–∞—á–∏. –ö–æ–Ω–µ—Ü —Å–≤—è–∑–∏.")


async def main():
    await asyncio.gather(bot_start(), connect_to_server())

asyncio.run(main())

if __name__ == '__main__':
    asyncio.run(main())
